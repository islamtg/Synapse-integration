{
	"name": "spark adal running spn",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "112g",
			"driverCores": 16,
			"executorMemory": "112g",
			"executorCores": 16,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0fa1b483-7bcb-44c7-b3d8-3a2d0a8d5d69"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"9cd6cb3d-21a0-4cc9-a050-77dca3e3555e": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "1"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "col1",
										"type": "int"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/3c84e5c6-c8ce-4f99-b67c-b39db1a54086/resourceGroups/iselghaz-insider-synapse/providers/Microsoft.Synapse/workspaces/ie-synapse-insider/bigDataPools/spark",
				"name": "spark",
				"type": "Spark",
				"endpoint": "https://ie-synapse-insider.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"import adal\r\n",
					"resource_app_id_url = \"https://database.windows.net/\"\r\n",
					"service_principal_id = '51e74d19-a92f-48cd-bc47-55dae310c18f'\r\n",
					"service_principal_secret = 'M2V8Q~_6VKOWZQrZNPne5oxWANNU1FBYB.3wwaFL'\r\n",
					"tenant_id = '72f988bf-86f1-41af-91ab-2d7cd011db47'\r\n",
					"authority = \"https://login.windows.net/\" + tenant_id\r\n",
					"azure_sql_url = \"jdbc:sqlserver://ie-synapse-insider.sql.azuresynapse.net\"\r\n",
					"database_name = \"sqld\"\r\n",
					"query = \"select TOP 10 * FROM df.test\"\r\n",
					"encrypt = \"true\"\r\n",
					"host_name_in_certificate = \"*.database.windows.net\"\r\n",
					"context = adal.AuthenticationContext(authority)\r\n",
					"token = context.acquire_token_with_client_credentials(resource_app_id_url, service_principal_id, service_principal_secret)\r\n",
					"access_token = token[\"accessToken\"]\r\n",
					"emperorDf = spark.read \\\r\n",
					"             .format(\"com.microsoft.sqlserver.jdbc.spark\") \\\r\n",
					"             .option(\"url\", azure_sql_url) \\\r\n",
					"             .option(\"query\", query) \\\r\n",
					"             .option(\"databaseName\", database_name) \\\r\n",
					"             .option(\"accessToken\", access_token) \\\r\n",
					"             .option(\"encrypt\", \"true\") \\\r\n",
					"             .option(\"hostNameInCertificate\", \"*.database.windows.net\") \\\r\n",
					"             .load()\r\n",
					"display(emperorDf)"
				],
				"execution_count": 4
			}
		]
	}
}