{
	"name": "RawToEnrichedFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ie-synapse-insider-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ie-synapse-insider-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DistinctRows"
				}
			],
			"scriptLines": [
				"parameters{",
				"     container as string (toString('raw-data')),",
				"     folder as string (toString('customer')),",
				"     targetcontainer as string (toString('curated-data'))",
				"}",
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: false,",
				"     rowUrlColumn: 'filename',",
				"     format: 'delimited',",
				"     fileSystem: ($container),",
				"     folderPath: ($folder),",
				"     columnDelimiter: '|',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false) ~> source1",
				"source1 derive(filename = concat(replace(filename, '.dat', ''), '_', toString(currentDate()), '.parquet')) ~> DerivedColumn1",
				"DerivedColumn1 aggregate(groupBy(mycols = sha2(256,columns())),",
				"     each(match(true()), $$ = first($$))) ~> DistinctRows",
				"DistinctRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     fileSystem: ($targetcontainer),",
				"     folderPath: ($folder),",
				"     compressionCodec: 'none',",
				"     rowUrlColumn:'filename',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}